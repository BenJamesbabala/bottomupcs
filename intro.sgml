<preface id="intro">
  
  <title>Introduction</title>
  
  <sect1><title>Welcome</title>
    <para>Welcome to &csbu;</para>
    <sect2>
      <title>Philosphy</title>

      <para>In a nutshell, what you are reading is intended to be a
      shop class for computer science.  Young computer science
      students are taught to "drive" the computer; but where do you go
      to learn what is under the hood?  Trying to understand the
      operating system is unfortunatley not as easy as just opening
      the bonnet.  The current Linux kernel runs into the millions of
      lines of code, add to that the other critical parts of a modern
      operating system (the compiler, assembler and system libraries)
      and your codebase becomes unimaginable.  Further still, add a
      University level operating systems course (or four), some good
      reference manuals, two or three years of C experience and, just
      maybe, you might be able to figure out where to <emphasis>start
      looking</emphasis> to make sense of it all.
      </para>

      <para>To keep with the car analogy, the prospective student is
      starting out trying to work on a Forumla One engine without ever
      knowing how a two stroke motor operates.  During their shop
      class the student should pull apart, twist, turn and put back
      together that two stroke motor, and consequentally have a pretty
      good framework for understanding just how the Formula One engine
      works.  Nobody will expect them to be a Formula One engineer,
      but they are well on their way!</para>

      <para>I hope that by working through the modules in this course,
      the student can have the amazing world of computer science
      opened up to them.</para>

    </sect2>
    <sect2>
      <title>Why <emphasis>from the bottom up</emphasis>?</title>

      <para>Not everyone wants to attend shop class.  Most people only
      want to drive the car, not know how to build one from scratch.
      Obviously any general computer science curriculm has to take
      this into account else it won't be relevant to it's students.
      So computer science is taught from the "top down"; applications,
      high level programming, software design and development theory,
      possibly data structures.  Students will probably be exposed to
      binary, hopefully binary logic, possibly even some low level
      concepts such as registers, opcodes and the like at a
      superficial level.</para>
      
      <para>This course aims to move in completely the opposite
      direction, working from operating systems fundamentals through
      to how those applications are complied and executed.  </para>
    </sect2>

    <sect2>
      <title>Enabling technologies</title> 

      <para>This course is only possible thanks to the development of
      <glossterm linkend="opensource">Open Source</glossterm>
      technologies.  Before Linux it was like taking a shop course
      with a car that had it's bonnet welded shut; today we are in a
      position to open that bonnet, poke around with the insides and,
      better still, take that engine and use it to do whatever we
      want.</para>
    </sect2>

    <sect2>
      <title>Who is this aimed at?</title>
      <para>I belive that any interested high school student should be
      able to follow this course under instruction.</para>
    </sect2>

    <sect2>
      <title>Who should be <emphasis>teaching</emphasis> this course?</title>

      <para>I imagine there would be no end of benevolent hackers
      willing to spend a few hours a week emparting their knowledge to
      a new generation using this course as a general framework.
      Obviously you'll need to understand a fair bit about how an
      operating system and it's components works, but if you read
      through this course and none of it is news to you, you would
      probably be perfect!</para>
    </sect2>

    <sect2>
      <title>The Open Source Philosophy</title> <para>I look forward
      to your contributions to this course.
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>About the course</title>

    <para>The course is broken up int 10 distinct modules which I have
    planned to be taught one a week.  These are not lecture notes, nor
    is it a text book.  I envisage the teacher reading the module and
    giving a seminar style lecture for around an hour, and then
    students can play with the ideas they have just been exposed to.
    I doubt that there would be sufficient time to go through all the
    material, but the student can always use the module as a reference
    for their own learning.
    </para>

  </sect1>
  
</preface>

<!--
Local Variables:
mode: sgml
sgml-parent-document: ("csbu.sgml" "book" "preface")
End:
-->